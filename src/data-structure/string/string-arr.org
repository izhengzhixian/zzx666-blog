#+TITLE: KMP 算法
#+DATE: <2018-02-03 Sat>
#+LAYOUT: post
#+OPTIONS: ^:{}
#+TAGS: C, data-structure
#+CATEGORIES: data-structure

* 描述
  - 本程序是模式匹配算法的改进，克努特-莫里斯-普拉特操作（KMP 算法）的实现。
  - 通过命令行传入参数，并输出。
  - 输出数组 arr 是从 0 开始计数的，数组所存索引也是从 0 开始计数的
  #+BEGIN_EXPORT html
    <!--more-->
  #+END_EXPORT
* 代码
  #+BEGIN_SRC C

    #include<stdio.h>
    #include<stdlib.h>
    #include<string.h>
    int main(int argc, char **argv)
    {
      int i, j;
      int length = strlen(argv[1]);

      int *arr = malloc( length * sizeof(int) );
      /*-2 代表没有赋过值。*/
      for(i=0; i < length; i++)
        arr[i]=-2;
      /*本次 for 循环中,i 是代表推进距离。*/
      for(i=1; i < length; i++){

        for(j=0; j < length-i; j++){

          if(argv[1][j] == argv[1][j+i]){
            if(arr[j+i+1] < j+1){
              arr[j+i+1] = j+1;
            }
          }else{
            break;
          }
        }
      }
      for(i=1;i<length;i++)
        if(arr[i] == -2)
          arr[i]=0;
      arr[0] = -1;

      for(i=0;i<length;i++)
        printf("arr[%d]=%d\n",i+1,arr[i]+1);

      return 0;
    }

  #+END_SRC
